var useAmplifyAuth=function(r,t){"use strict";const e=(r,t)=>{switch(t.type){case"FETCH_USER_DATA_INIT":return{...r,isLoading:!0,isError:!1};case"FETCH_USER_DATA_SUCCESS":return{...r,isLoading:!1,isError:!1,user:t.payload.user};case"FETCH_USER_DATA_FAILURE":return{...r,isLoading:!1,isError:!0};case"RESET_USER_DATA":return{...r,user:null};default:throw new Error}};return()=>{const[s,u]=r.useReducer(e,{isLoading:!0,isError:!1,user:null}),[n,a]=r.useState(!1);r.useEffect(()=>{let r=!0;return t.Hub.listen("auth",t=>{const{payload:e}=t;(t=>{switch(t.event){case"signIn":r&&a(!0)}})(e)}),(async()=>{r&&u({type:"FETCH_USER_DATA_INIT"});try{if(r){const r=await t.Auth.currentAuthenticatedUser();r&&u({type:"FETCH_USER_DATA_SUCCESS",payload:{user:r}})}}catch(t){r&&u({type:"FETCH_USER_DATA_FAILURE"})}})(),()=>{t.Hub.remove("auth"),r=!1}},[n]);return{state:s,handleSignout:async()=>{try{await t.Auth.signOut(),a(!1),u({type:"RESET_USER_DATA"})}catch(r){console.error("Error signing out user ",r)}}}}}(react,awsAmplify);
